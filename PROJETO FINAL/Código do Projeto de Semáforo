```cpp
// Código Arduino aqui
// Definição dos pinos dos LEDs e do Buzzer
const int ledVerde = 3;
const int ledAmarelo = 4;
const int ledVermelho = 5;
const int buzzer = 6;
int estadoSemaforo = 0;  // Estado do semáforo (0 = verde, 1 = amarelo, 2 = vermelho)
unsigned long tempoAnterior = 0;  // Variável para armazenar o tempo anterior
unsigned long intervalo = 4000;  // Tempo de duração de cada estado (4 segundos)
bool modoSom = true;  // Som ativado por padrão


void setup() {
  pinMode(ledVerde, OUTPUT);
  pinMode(ledAmarelo, OUTPUT);
  pinMode(ledVermelho, OUTPUT);
  pinMode(buzzer, OUTPUT);
}


void loop() {
  unsigned long tempoAtual = millis();  // Tempo atual


  // Verifica se é hora de mudar o estado do semáforo (a cada 4 segundos)
  if (tempoAtual - tempoAnterior >= intervalo) {
    tempoAnterior = tempoAtual;  // Atualiza o tempo anterior
    estadoSemaforo = (estadoSemaforo + 1) % 3;  // Muda o estado (0 -> 1 -> 2 -> 0)
  }


  // Atualiza os LEDs e sons de acordo com o estado do semáforo
  switch (estadoSemaforo) {
    case 0: // Verde
      controlarSemaforo(ledVerde);
      if (modoSom) tocarSomVerde();
      break;
    case 1: // Amarelo
      controlarSemaforo(ledAmarelo);
      if (modoSom) tocarSomAmarelo();
      break;
    case 2: // Vermelho
      controlarSemaforo(ledVermelho);
      if (modoSom) tocarSomVermelho();
      break;
  }


  // Desliga os LEDs após 4 segundos de acendimento
  if (tempoAtual - tempoAnterior >= intervalo) {
    desligarSemaforos();
  }
}


// Função para acender o LED ativo e apagar os outros
void controlarSemaforo(int ledAtivo) {
  // Acende o LED ativo
  digitalWrite(ledVerde, (ledAtivo == ledVerde) ? HIGH : LOW);
  digitalWrite(ledAmarelo, (ledAtivo == ledAmarelo) ? HIGH : LOW);
  digitalWrite(ledVermelho, (ledAtivo == ledVermelho) ? HIGH : LOW);
}


// Função para desligar todos os LEDs
void desligarSemaforos() {
  digitalWrite(ledVerde, LOW);
  digitalWrite(ledAmarelo, LOW);
  digitalWrite(ledVermelho, LOW);
}


// Sons personalizados para cada cor usando o buzzer passivo
void tocarSomVerde() {
  tone(buzzer, 440, 500); // Nota Lá
  delay(500);  // Duração do som
  noTone(buzzer);
}


void tocarSomAmarelo() {
  tone(buzzer, 660, 300); // Nota Mi
  delay(300);  // Duração do primeiro som
  tone(buzzer, 520, 300); // Nota Dó
  delay(300);  // Duração do segundo som
  noTone(buzzer);
}


void tocarSomVermelho() {
  tone(buzzer, 880, 200); // Nota Lá aguda
  delay(200);  // Duração do primeiro som
  tone(buzzer, 700, 200); // Nota Sol
  delay(200);  // Duração do segundo som
  tone(buzzer, 500, 200); // Nota Dó grave
  delay(200);  // Duração do terceiro som
  noTone(buzzer);
}

